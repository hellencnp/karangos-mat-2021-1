{"ast":null,"code":"var _jsxFileName = \"/workspace/karangos-mat-2021-1/src/routed/KarangosForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport InputMask from 'react-input-mask';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport React from 'react';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  form: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    flexWrap: 'wrap',\n    maxWidth: '80%',\n    margin: '0 auto',\n    '& .MuiFormControl-root': {\n      minWidth: '200px',\n      maxWidth: '500px',\n      margin: '0 24px 24px 0'\n    }\n  },\n  toolbar: {\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'space-around',\n    marginTop: '36px'\n  }\n}));\nexport default function KarangosForm() {\n  _s();\n\n  const classes = useStyles();\n  const colors = ['Amarelo', 'Azul', 'Bege', 'Branco', 'Cinza', 'Dourado', 'Laranja', 'Marrom', 'Prata', 'Preto', 'Rosa', 'Roxo', 'Verde', 'Vermelho', 'Vinho'];\n  const years = [];\n\n  for (let i = new Date().getFullYear(); i >= 1900; i--) years.push(i); // Classes de caracters para a máscara da placa\n  // 1) Três primeiras posições, somente letras (maiúsculas ou minúsculas) ~> [A-Za-z]\n  // 2) Quinta, sétima e oitava posições, somente dígitos ~> [0-9]\n  // 3) Sexta posição: dígitos ou letras (maiúsculas ou minúsculas) de A a J ~> [0-9A-Ja-j]\n\n\n  const formatChars = {\n    'A': '[A-Za-z]',\n    '0': '[0-9]',\n    '#': '[0-9A-Ja-j]'\n  }; // Máscara de entrada para a placa\n\n  const placaMask = 'AAA-0#00'; // Máscara para CPF: '000.000.000-00'\n  // Máscara para CNPJ: '00.000.000/0000-00'\n\n  const [karango, setKarango] = useState({\n    id: null,\n    marca: '',\n    modelo: '',\n    cor: '',\n    ano_fabricacao: new Date().getFullYear(),\n    // Ano corrente\n    importado: '0',\n    placa: '',\n    preco: 0\n  });\n  const [currentId, setCurrentId] = useState();\n  const [importadoChecked, setImportadoChecked] = useState(false);\n  const [sendBtnStatus, setSendBtnStatus] = useState({\n    disabled: false,\n    label: 'Enviar'\n  });\n  const [sbStatus, setSbStatus] = useState({\n    open: false,\n    severity: 'success',\n    message: ''\n  });\n  const [error, setError] = useState({\n    marca: '',\n    modelo: '',\n    cor: '',\n    placa: '',\n    preco: ''\n  });\n  const [isModified, setIsModified] = useState(false);\n  const [dialogOpen, setDialogOpen] = useState(false); // O diálogo de confirmação está aberto?\n\n  const [title, setTitle] = useState('Cadastrar novo karango');\n  const history = useHistory();\n  const params = useParams(); // useEffect() para quando o formulário for carregado (só na inicialização)\n\n  useEffect(() => {\n    // Verificamos se a rota atual contém o parâmetro id\n    // Em caso positivo, buscamos os dados no back-end e carregamos o formulário para edição\n    if (params.id) {\n      setTitle('Editar karango');\n      getData(params.id);\n    }\n  }, []);\n\n  async function getData(id) {\n    try {\n      let response = await axios.get(`https://api.faustocintra.com.br/karangos/${id}`);\n      setKarango(response.data);\n    } catch (error) {\n      setSbStatus({\n        open: true,\n        severity: 'error',\n        message: 'Não foi possível carregar os dados para edição.'\n      });\n    }\n  }\n\n  function handleInputChange(event, property) {\n    const karangoTemp = { ...karango\n    };\n    setCurrentId(event.target.id);\n    if (event.target.id) property = event.target.id;\n\n    if (property === 'importado') {\n      const newState = !importadoChecked; // Inverte o valor\n\n      if (newState) karangoTemp.importado = '1';else karangoTemp.importado = '0';\n      setImportadoChecked(newState);\n    } else if (property === 'placa') {\n      karangoTemp.placa = event.target.value.toUpperCase();\n    } else {\n      // Quando o nome de uma propriedade de objeto aparece entre [],\n      // significa que o nome da propriedade será determinado pela\n      // variável ou expressão contida dentro dos colchetes\n      karangoTemp[property] = event.target.value;\n    }\n\n    setKarango(karangoTemp);\n    setIsModified(true); // O formulário foi modificado\n\n    validate(karangoTemp); // Dispara a validação\n  }\n\n  function validate(data) {\n    let isValid = true;\n    const errorTemp = {\n      marca: '',\n      modelo: '',\n      cor: '',\n      placa: '',\n      preco: ''\n    }; // trim(): retira espaços em branco do início e do final de uma string\n\n    if (data.marca.trim() === '') {\n      errorTemp.marca = 'A marca deve ser preenchida';\n      isValid = false;\n    }\n\n    if (data.modelo.trim() === '') {\n      errorTemp.modelo = 'O modelo deve ser preenchido';\n      isValid = false;\n    }\n\n    if (data.cor.trim() === '') {\n      errorTemp.cor = 'A cor deve ser informada';\n      isValid = false;\n    } // A placa não pode ser string vazia nem conter sublinhado\n\n\n    if (data.placa.trim() === '' || data.placa.includes('_')) {\n      errorTemp.placa = 'A placa deve ser preenchida corretamente';\n      isValid = false;\n    } // O preço deve ser numérico e maior que zero\n\n\n    if (isNaN(data.preco) || Number(data.preco) <= 0) {\n      errorTemp.preco = 'O preço deve ser informado e maior que zero';\n      isValid = false;\n    }\n\n    setError(errorTemp);\n    return isValid;\n  }\n\n  async function saveData() {\n    try {\n      // Desabilita o botão de enviar para evitar envios duplicados\n      setSendBtnStatus({\n        disabled: true,\n        label: 'Enviando...'\n      }); // Se estivermos editando, precisamos enviar os dados com o verbo HTTP PUT\n\n      if (params.id) await axios.put(`https://api.faustocintra.com.br/karangos/${params.id}`, karango); // Senão, estaremos criando um novo registro, e o verbo HTTP a ser usado é o POST\n      else await axios.post('https://api.faustocintra.com.br/karangos', karango); // Mostra a SnackBar\n\n      setSbStatus({\n        open: true,\n        severity: 'success',\n        message: 'Dados salvos com sucesso!'\n      });\n    } catch (error) {\n      // Mostra a SnackBar\n      setSbStatus({\n        open: true,\n        severity: 'error',\n        message: 'ERRO: ' + error.message\n      });\n    } // Restaura o estado inicial do botão de envio\n\n\n    setSendBtnStatus({\n      disabled: false,\n      label: 'Enviar'\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault(); // Evita que a página seja recarregada\n    // Só envia para o banco de dados se o formulário for válido\n\n    if (validate(karango)) saveData();\n  }\n\n  function handleSbClose() {\n    setSbStatus({ ...sbStatus,\n      open: false\n    }); // Retorna para a página de listagem em caso de sucesso\n\n    if (sbStatus.severity === 'success') history.push('/list');\n  }\n\n  function handleDialogClose(result) {\n    setDialogOpen(false); // Se o usuário concordou em voltar \n\n    if (result) history.push('/list');\n  }\n\n  function handleGoBack() {\n    // Se o formulário tiver sido modificado, exibimos o diálogo de confirmação\n    if (isModified) setDialogOpen(true); // Senão, podemos voltar diretamente para a listagem\n    else history.push('/list');\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ConfirmDialog, {\n      isOpen: dialogOpen,\n      onClose: handleDialogClose,\n      children: \"H\\xE1 dados n\\xE3o salvos. Deseja realmente voltar?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: sbStatus.open,\n      autoHideDuration: 6000,\n      onClose: handleSbClose,\n      children: /*#__PURE__*/_jsxDEV(MuiAlert, {\n        elevation: 6,\n        variant: \"filled\",\n        onClose: handleSbClose,\n        severity: sbStatus.severity,\n        children: sbStatus.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"marca\",\n        label: \"Marca\",\n        variant: \"filled\",\n        value: karango.marca,\n        onChange: handleInputChange,\n        required: true\n        /* not null, precisa ser preenchido */\n        ,\n        placeholder: \"Informe a marca do ve\\xEDculo\",\n        fullWidth: true,\n        error: error.marca !== '',\n        helperText: error.marca\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"modelo\",\n        label: \"Modelo\",\n        variant: \"filled\",\n        value: karango.modelo,\n        onChange: handleInputChange,\n        required: true\n        /* not null, precisa ser preenchido */\n        ,\n        placeholder: \"Informe o modelo do ve\\xEDculo\",\n        fullWidth: true,\n        error: error.modelo !== '',\n        helperText: error.modelo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"cor\",\n        label: \"Cor\",\n        variant: \"filled\",\n        value: karango.cor,\n        onChange: event => handleInputChange(event, 'cor'),\n        required: true\n        /* not null, precisa ser preenchido */\n        ,\n        placeholder: \"Informe a cor do ve\\xEDculo\",\n        select: true,\n        fullWidth: true,\n        error: error.cor !== '',\n        helperText: error.cor,\n        children: colors.map(color => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: color,\n          children: color\n        }, color, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"ano_fabricacao\",\n        label: \"Ano de fabrica\\xE7\\xE3o\",\n        variant: \"filled\",\n        value: karango.ano_fabricacao,\n        onChange: event => handleInputChange(event, 'ano_fabricacao'),\n        required: true\n        /* not null, precisa ser preenchido */\n        ,\n        placeholder: \"Informe o ano de fabrica\\xE7\\xE3o do ve\\xEDculo\",\n        select: true,\n        fullWidth: true,\n        children: years.map(year => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: year,\n          children: year\n        }, year, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 31\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            id: \"importado\",\n            checked: importadoChecked,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this),\n          label: \"Importado?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputMask, {\n        id: \"placa\",\n        mask: placaMask,\n        formatChars: formatChars,\n        value: karango.placa,\n        onChange: event => handleInputChange(event, 'placa'),\n        children: () => /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Placa\",\n          variant: \"filled\",\n          required: true\n          /* not null, precisa ser preenchido */\n          ,\n          placeholder: \"Informe a placa do ve\\xEDculo\",\n          fullWidth: true,\n          error: error.placa !== '',\n          helperText: error.placa\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"preco\",\n        label: \"Pre\\xE7o\",\n        variant: \"filled\",\n        value: karango.preco,\n        onChange: handleInputChange,\n        required: true\n        /* not null, precisa ser preenchido */\n        ,\n        placeholder: \"Informe o valor do ve\\xEDculo\",\n        fullWidth: true,\n        type: \"number\",\n        onFocus: event => event.target.select() // Seleciona o conteúdo ao focar\n        ,\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: \"R$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 29\n          }, this)\n        },\n        error: error.preco !== '',\n        helperText: error.preco\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolbar,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"secondary\",\n          disabled: sendBtnStatus.disabled,\n          children: sendBtnStatus.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleGoBack,\n          children: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(KarangosForm, \"BHfB//WQB/dsT/lNOdaBoWPuDW4=\", false, function () {\n  return [useStyles, useHistory, useParams];\n});\n\n_c = KarangosForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"KarangosForm\");","map":{"version":3,"sources":["/workspace/karangos-mat-2021-1/src/routed/KarangosForm.js"],"names":["useState","useEffect","TextField","MenuItem","FormControl","FormControlLabel","Checkbox","InputMask","makeStyles","InputAdornment","Toolbar","Button","axios","useHistory","useParams","Snackbar","MuiAlert","React","ConfirmDialog","useStyles","theme","form","display","justifyContent","flexWrap","maxWidth","margin","minWidth","toolbar","width","marginTop","KarangosForm","classes","colors","years","i","Date","getFullYear","push","formatChars","placaMask","karango","setKarango","id","marca","modelo","cor","ano_fabricacao","importado","placa","preco","currentId","setCurrentId","importadoChecked","setImportadoChecked","sendBtnStatus","setSendBtnStatus","disabled","label","sbStatus","setSbStatus","open","severity","message","error","setError","isModified","setIsModified","dialogOpen","setDialogOpen","title","setTitle","history","params","getData","response","get","data","handleInputChange","event","property","karangoTemp","target","newState","value","toUpperCase","validate","isValid","errorTemp","trim","includes","isNaN","Number","saveData","put","post","handleSubmit","preventDefault","handleSbClose","handleDialogClose","result","handleGoBack","map","color","year","select","startAdornment"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport InputMask from 'react-input-mask'\nimport { makeStyles } from '@material-ui/core/styles'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport axios from 'axios'\nimport { useHistory, useParams } from 'react-router-dom'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport MuiAlert from '@material-ui/lab/Alert'\nimport React from 'react'\nimport ConfirmDialog from '../ui/ConfirmDialog'\n\nconst useStyles = makeStyles(theme => ({\n  form: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    flexWrap: 'wrap',\n    maxWidth: '80%',\n    margin: '0 auto',\n    '& .MuiFormControl-root': {\n      minWidth: '200px',\n      maxWidth: '500px',\n      margin: '0 24px 24px 0'\n    }\n  },\n  toolbar: {\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'space-around',\n    marginTop: '36px'\n  }\n}))\n\nexport default function KarangosForm() {\n  const classes = useStyles()\n\n  const colors = [\n    'Amarelo',\n    'Azul',\n    'Bege',\n    'Branco',\n    'Cinza',\n    'Dourado',\n    'Laranja',\n    'Marrom',\n    'Prata',\n    'Preto',\n    'Rosa',\n    'Roxo',\n    'Verde',\n    'Vermelho',\n    'Vinho'\n  ]\n\n  const years = []\n  for(let i = (new Date()).getFullYear(); i >= 1900; i--) years.push(i)\n\n  // Classes de caracters para a máscara da placa\n  // 1) Três primeiras posições, somente letras (maiúsculas ou minúsculas) ~> [A-Za-z]\n  // 2) Quinta, sétima e oitava posições, somente dígitos ~> [0-9]\n  // 3) Sexta posição: dígitos ou letras (maiúsculas ou minúsculas) de A a J ~> [0-9A-Ja-j]\n  const formatChars = {\n    'A': '[A-Za-z]',\n    '0': '[0-9]',\n    '#': '[0-9A-Ja-j]'\n  }\n\n  // Máscara de entrada para a placa\n  const placaMask = 'AAA-0#00'\n\n  // Máscara para CPF: '000.000.000-00'\n  // Máscara para CNPJ: '00.000.000/0000-00'\n\n  const [karango, setKarango] = useState({\n    id: null,\n    marca: '',\n    modelo: '',\n    cor: '',\n    ano_fabricacao: (new Date()).getFullYear(),    // Ano corrente\n    importado: '0',\n    placa: '',\n    preco: 0\n  })\n  const [currentId, setCurrentId] = useState()\n\n  const [importadoChecked, setImportadoChecked] = useState(false)\n\n  const [sendBtnStatus, setSendBtnStatus] = useState({\n    disabled: false,\n    label: 'Enviar'\n  })\n\n  const [sbStatus, setSbStatus] = useState({\n    open: false,\n    severity: 'success',\n    message: '' \n  })\n\n  const [error, setError] = useState({\n    marca: '',\n    modelo: '',\n    cor: '',\n    placa: '',\n    preco: ''\n  })\n\n  const [isModified, setIsModified] = useState(false)\n\n  const [dialogOpen, setDialogOpen] = useState(false) // O diálogo de confirmação está aberto?\n\n  const [title, setTitle] = useState('Cadastrar novo karango')\n\n  const history = useHistory()\n  const params = useParams()\n\n  // useEffect() para quando o formulário for carregado (só na inicialização)\n  useEffect(() => {\n    // Verificamos se a rota atual contém o parâmetro id\n    // Em caso positivo, buscamos os dados no back-end e carregamos o formulário para edição\n    if(params.id) {\n      setTitle('Editar karango')\n      getData(params.id)\n    }\n  }, [])\n\n  async function getData(id) {\n    try {\n      let response = await axios.get(`https://api.faustocintra.com.br/karangos/${id}`)\n      setKarango(response.data)\n    }\n    catch(error) {\n      setSbStatus({\n        open: true,\n        severity: 'error',\n        message: 'Não foi possível carregar os dados para edição.'\n      })\n    }\n  }\n\n  function handleInputChange(event, property) {\n\n    const karangoTemp = {...karango}\n\n    setCurrentId(event.target.id)\n    if(event.target.id) property = event.target.id\n\n    if(property === 'importado') {\n      const newState = ! importadoChecked // Inverte o valor\n      if(newState) karangoTemp.importado = '1'\n      else karangoTemp.importado = '0'\n      setImportadoChecked(newState) \n    }\n    else if(property === 'placa') {\n      karangoTemp.placa = event.target.value.toUpperCase()\n    }\n    else {\n      // Quando o nome de uma propriedade de objeto aparece entre [],\n      // significa que o nome da propriedade será determinado pela\n      // variável ou expressão contida dentro dos colchetes\n      karangoTemp[property] = event.target.value\n    }\n    setKarango(karangoTemp)\n    setIsModified(true)   // O formulário foi modificado\n    validate(karangoTemp)  // Dispara a validação\n  }\n\n  function validate(data) {\n    let isValid = true\n\n    const errorTemp = {\n      marca: '',\n      modelo: '',\n      cor: '',\n      placa: '',\n      preco: ''\n    }\n\n    // trim(): retira espaços em branco do início e do final de uma string\n    if(data.marca.trim() === '') {\n      errorTemp.marca = 'A marca deve ser preenchida'\n      isValid = false\n    }     \n\n    if(data.modelo.trim() === '') {\n      errorTemp.modelo = 'O modelo deve ser preenchido'\n      isValid = false\n    }\n\n    if(data.cor.trim() === '') {\n      errorTemp.cor = 'A cor deve ser informada'\n      isValid = false\n    }\n\n    // A placa não pode ser string vazia nem conter sublinhado\n    if(data.placa.trim() === '' || data.placa.includes('_')) {\n      errorTemp.placa = 'A placa deve ser preenchida corretamente'\n      isValid = false\n    }\n\n    // O preço deve ser numérico e maior que zero\n    if(isNaN(data.preco) || Number(data.preco) <= 0) {\n      errorTemp.preco = 'O preço deve ser informado e maior que zero'\n      isValid = false\n    }\n\n    setError(errorTemp)\n    return isValid\n  }\n\n  async function saveData() {\n    try {\n      // Desabilita o botão de enviar para evitar envios duplicados\n      setSendBtnStatus({disabled: true, label: 'Enviando...'})\n      \n      // Se estivermos editando, precisamos enviar os dados com o verbo HTTP PUT\n      if(params.id) await axios.put(`https://api.faustocintra.com.br/karangos/${params.id}`, karango)\n      // Senão, estaremos criando um novo registro, e o verbo HTTP a ser usado é o POST\n      else await axios.post('https://api.faustocintra.com.br/karangos', karango)\n      \n      // Mostra a SnackBar\n      setSbStatus({open: true, severity: 'success', message: 'Dados salvos com sucesso!'})\n      \n    }\n    catch(error) {\n      // Mostra a SnackBar\n      setSbStatus({open: true, severity: 'error', message: 'ERRO: ' + error.message})\n    }\n    // Restaura o estado inicial do botão de envio\n    setSendBtnStatus({disabled: false, label: 'Enviar'})\n  }\n\n  function handleSubmit(event) {\n\n    event.preventDefault()    // Evita que a página seja recarregada\n\n    // Só envia para o banco de dados se o formulário for válido\n    if(validate(karango)) saveData()\n\n  }\n\n  function handleSbClose() {\n    setSbStatus({...sbStatus, open: false})\n\n    // Retorna para a página de listagem em caso de sucesso\n    if(sbStatus.severity === 'success') history.push('/list')\n  }\n\n  function handleDialogClose(result) {\n    setDialogOpen(false)\n\n    // Se o usuário concordou em voltar \n    if(result) history.push('/list')\n  }\n\n  function handleGoBack() {\n    // Se o formulário tiver sido modificado, exibimos o diálogo de confirmação\n    if(isModified) setDialogOpen(true)\n    // Senão, podemos voltar diretamente para a listagem\n    else history.push('/list')\n  }\n\n  return (\n    <>\n\n      <ConfirmDialog isOpen={dialogOpen} onClose={handleDialogClose}>\n        Há dados não salvos. Deseja realmente voltar?\n      </ConfirmDialog>\n\n      <Snackbar open={sbStatus.open} autoHideDuration={6000} onClose={handleSbClose}>\n        <MuiAlert elevation={6} variant=\"filled\" onClose={handleSbClose} severity={sbStatus.severity}>\n          {sbStatus.message}\n        </MuiAlert>\n      </Snackbar>\n\n      <h1>{title}</h1>\n      <form className={classes.form} onSubmit={handleSubmit}>\n        \n        <TextField \n          id=\"marca\" \n          label=\"Marca\" \n          variant=\"filled\"\n          value={karango.marca}\n          onChange={handleInputChange}\n          required  /* not null, precisa ser preenchido */\n          placeholder=\"Informe a marca do veículo\"\n          fullWidth\n          error={error.marca !== ''}\n          helperText={error.marca}\n        />\n\n        <TextField \n          id=\"modelo\" \n          label=\"Modelo\" \n          variant=\"filled\"\n          value={karango.modelo}\n          onChange={handleInputChange}\n          required  /* not null, precisa ser preenchido */\n          placeholder=\"Informe o modelo do veículo\"\n          fullWidth\n          error={error.modelo !== ''}\n          helperText={error.modelo}\n        />\n\n        <TextField \n          id=\"cor\" \n          label=\"Cor\" \n          variant=\"filled\"\n          value={karango.cor}\n          onChange={event => handleInputChange(event, 'cor')}\n          required  /* not null, precisa ser preenchido */\n          placeholder=\"Informe a cor do veículo\"\n          select\n          fullWidth\n          error={error.cor !== ''}\n          helperText={error.cor}\n        >\n          { colors.map(color => <MenuItem value={color} key={color}>{color}</MenuItem>)}\n        </TextField>\n\n        <TextField \n          id=\"ano_fabricacao\" \n          label=\"Ano de fabricação\" \n          variant=\"filled\"\n          value={karango.ano_fabricacao}\n          onChange={event => handleInputChange(event, 'ano_fabricacao')}\n          required  /* not null, precisa ser preenchido */\n          placeholder=\"Informe o ano de fabricação do veículo\"\n          select\n          fullWidth\n        >\n          { years.map(year => <MenuItem value={year} key={year}>{year}</MenuItem>)}\n        </TextField>\n\n        <FormControl fullWidth>\n          <FormControlLabel control={\n            <Checkbox\n              id=\"importado\"\n              checked={importadoChecked}\n              onChange={handleInputChange}\n            />\n          }\n          label=\"Importado?\"\n        />\n        </FormControl>\n\n        <InputMask\n          id=\"placa\" \n          mask={placaMask}\n          formatChars={formatChars}\n          value={karango.placa}\n          onChange={(event) => handleInputChange(event, 'placa')}\n        >\n          {() => <TextField \n            label=\"Placa\" \n            variant=\"filled\"\n            required  /* not null, precisa ser preenchido */\n            placeholder=\"Informe a placa do veículo\"\n            fullWidth\n            error={error.placa !== ''}\n            helperText={error.placa}\n          />}\n        </InputMask>\n\n        <TextField \n          id=\"preco\" \n          label=\"Preço\" \n          variant=\"filled\"\n          value={karango.preco}\n          onChange={handleInputChange}\n          required  /* not null, precisa ser preenchido */\n          placeholder=\"Informe o valor do veículo\"\n          fullWidth\n          type=\"number\"\n          onFocus={event => event.target.select()}  // Seleciona o conteúdo ao focar\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">R$</InputAdornment>,\n          }}\n          error={error.preco !== ''}\n          helperText={error.preco}\n        />\n\n        <Toolbar className={classes.toolbar}>\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\" disabled={sendBtnStatus.disabled}>\n            {sendBtnStatus.label}\n          </Button>\n          <Button variant=\"contained\" onClick={handleGoBack}>Voltar</Button>\n        </Toolbar>\n\n        {/* <div>\n          {JSON.stringify(karango)}\n          <br />\n          currentId: {JSON.stringify(currentId)}\n          <br />\n          isModified: {JSON.stringify(isModified)}\n        </div> */}\n      </form>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}